name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

    - name: Rsync project to server
      run: |
        rsync -az --delete \
          --exclude=".git" \
          --exclude="node_modules" \
          --exclude=".github" \
          --exclude="vendor" \
          --exclude="/storage" \
          --exclude=".env" \
          --no-perms --no-owner --no-group \
          ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/softgenix/htdocs/www.softgenix.space

    - name: Deploy via SSH
      run: |
        ssh -T -i ~/.ssh/id_ed25519 ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          set -e
          cd /home/softgenix/htdocs/www.softgenix.space
          
          echo "=== Starting Deployment ==="
          
          # Reiniciar contenedores con la nueva build
          docker-compose down
          docker-compose up -d --build
          
          # Esperar servicios
          echo "Waiting for containers..."
          sleep 30
          
          # Detectar contenedor backend
          CONTAINER_ID=$(docker-compose ps -q backend)
          if [ -z "$CONTAINER_ID" ]; then
            echo "ERROR: Backend container not found!"
            docker-compose ps
            exit 1
          fi
          
          echo "Using container: $CONTAINER_ID"
          
          # Ejecutar comandos de Laravel dentro del contenedor
          docker exec $CONTAINER_ID bash -c "
            composer install --no-dev --optimize-autoloader
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan cache:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan migrate --force
            php artisan tenants:migrate --force
            php artisan storage:link
            chown -R www-data:www-data storage bootstrap/cache
            chmod -R 775 storage bootstrap/cache
          "
          
          echo "âœ… Deployment completed!"
        EOF
